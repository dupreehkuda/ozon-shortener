// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mock; is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	echo "github.com/labstack/echo/v4"
)

// MockHandlers is a mock of Handlers interface.
type MockHandlers struct {
	ctrl     *gomock.Controller
	recorder *MockHandlersMockRecorder
}

// MockHandlersMockRecorder is the mock recorder for MockHandlers.
type MockHandlersMockRecorder struct {
	mock *MockHandlers
}

// NewMockHandlers creates a new mock instance.
func NewMockHandlers(ctrl *gomock.Controller) *MockHandlers {
	mock := &MockHandlers{ctrl: ctrl}
	mock.recorder = &MockHandlersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandlers) EXPECT() *MockHandlersMockRecorder {
	return m.recorder
}

// GetFullLink mocks base method.
func (m *MockHandlers) GetFullLink(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFullLink", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetFullLink indicates an expected call of GetFullLink.
func (mr *MockHandlersMockRecorder) GetFullLink(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFullLink", reflect.TypeOf((*MockHandlers)(nil).GetFullLink), c)
}

// ShortenLink mocks base method.
func (m *MockHandlers) ShortenLink(c echo.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortenLink", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// ShortenLink indicates an expected call of ShortenLink.
func (mr *MockHandlersMockRecorder) ShortenLink(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortenLink", reflect.TypeOf((*MockHandlers)(nil).ShortenLink), c)
}

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetFullLink mocks base method.
func (m *MockService) GetFullLink(id string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFullLink", id)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFullLink indicates an expected call of GetFullLink.
func (mr *MockServiceMockRecorder) GetFullLink(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFullLink", reflect.TypeOf((*MockService)(nil).GetFullLink), id)
}

// ShortenLink mocks base method.
func (m *MockService) ShortenLink(link string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortenLink", link)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShortenLink indicates an expected call of ShortenLink.
func (mr *MockServiceMockRecorder) ShortenLink(link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortenLink", reflect.TypeOf((*MockService)(nil).ShortenLink), link)
}

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// AddNewLink mocks base method.
func (m *MockStorage) AddNewLink(id, link string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNewLink", id, link)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddNewLink indicates an expected call of AddNewLink.
func (mr *MockStorageMockRecorder) AddNewLink(id, link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNewLink", reflect.TypeOf((*MockStorage)(nil).AddNewLink), id, link)
}

// GetFullLink mocks base method.
func (m *MockStorage) GetFullLink(id string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFullLink", id)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFullLink indicates an expected call of GetFullLink.
func (mr *MockStorageMockRecorder) GetFullLink(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFullLink", reflect.TypeOf((*MockStorage)(nil).GetFullLink), id)
}
